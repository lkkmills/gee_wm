/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #00d6a2 */
    /* displayProperties: [
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.MultiPolygon(
        [[[[-15.84470502694996, 13.819992930213113],
           [-15.84470502694996, 13.12553813169878],
           [-13.98801557382496, 13.12553813169878],
           [-13.98801557382496, 13.819992930213113]]],
         [[[-15.87766401132496, 17.37480310864754],
           [-15.87766401132496, 15.573350764347975],
           [-13.75730268319996, 15.573350764347975],
           [-13.75730268319996, 17.37480310864754]]],
         [[[-2.013216828300113, 15.054741318547295],
           [-2.013216828300113, 12.858521229787218],
           [1.7990390310748872, 12.858521229787218],
           [1.7990390310748872, 15.054741318547295]]],
         [[[2.864712859199887, 15.044131797876561],
           [2.864712859199887, 14.023209266715982],
           [4.172085906074887, 14.023209266715982],
           [4.172085906074887, 15.044131797876561]]],
         [[[4.161099577949887, 13.86327010019384],
           [4.161099577949887, 13.31865921390767],
           [5.710171843574887, 13.31865921390767],
           [5.710171843574887, 13.86327010019384]]],
         [[[8.985702240157254, 12.92277790477043],
           [8.985702240157254, 12.010969557896981],
           [10.820419037032254, 12.010969557896981],
           [10.820419037032254, 12.92277790477043]]],
         [[[35.685525363357186, 14.57041038942166],
           [35.685525363357186, 14.027467958593382],
           [36.487527316482186, 14.027467958593382],
           [36.487527316482186, 14.57041038942166]]],
         [[[36.048074191482186, 13.290856590464355],
           [36.048074191482186, 12.48765089454549],
           [36.696267550857186, 12.48765089454549],
           [36.696267550857186, 13.290856590464355]]],
         [[[39.563699191482186, 12.755671499393955],
           [39.563699191482186, 12.305237774457554],
           [40.025124972732186, 12.305237774457554],
           [40.025124972732186, 12.755671499393955]]],
         [[[-74.36107133544785, 18.64041747665418],
           [-74.36107133544785, 18.574040646335806],
           [-74.1166255346666, 18.574040646335806],
           [-74.1166255346666, 18.64041747665418]]],
         [[[-73.99989579833847, 18.48875406399873],
           [-73.99989579833847, 18.454236728653758],
           [-73.9628169409166, 18.454236728653758],
           [-73.9628169409166, 18.48875406399873]]],
         [[[177.430213284871, -17.642490709705378],
           [177.430213284871, -17.710530235732573],
           [177.5455697301835, -17.710530235732573],
           [177.5455697301835, -17.642490709705378]]],
         [[[177.9410775426835, -17.417254228422518],
           [177.9410775426835, -17.62678562688568],
           [178.232215237996, -17.62678562688568],
           [178.232215237996, -17.417254228422518]]],
         [[[178.364051175496, -17.715762978197304],
           [178.364051175496, -18.055561999491168],
           [178.5453255895585, -18.055561999491168],
           [178.5453255895585, -17.715762978197304]]],
         [[[178.81227249918646, -17.670843667814523],
           [178.81227249918646, -17.69177834885806],
           [178.8369917374677, -17.69177834885806],
           [178.8369917374677, -17.670843667814523]]],
         [[[-179.82000902687952, -18.955835834302782],
           [-179.82000902687952, -18.960706324725457],
           [-179.81365755593225, -18.960706324725457],
           [-179.81365755593225, -18.955835834302782]]],
         [[[179.93727073788608, -18.557890927061074],
           [179.93727073788608, -18.564562949115953],
           [179.94533882260288, -18.564562949115953],
           [179.94533882260288, -18.557890927061074]]],
         [[[179.86877784848178, -18.575140010287054],
           [179.86877784848178, -18.579045220879248],
           [179.875300980806, -18.579045220879248],
           [179.875300980806, -18.575140010287054]]],
         [[[178.51119379930648, -18.896649083019323],
           [178.51119379930648, -18.90996613760778],
           [178.523896741201, -18.90996613760778],
           [178.523896741201, -18.896649083019323]]],
         [[[-179.04064764880138, -17.964932372932427],
           [-179.04064764880138, -17.974076494301567],
           [-179.0336095323463, -17.974076494301567],
           [-179.0336095323463, -17.964932372932427]]],
         [[[177.22662252597294, -17.118888761201628],
           [177.22662252597294, -17.127747579397575],
           [177.2355489175745, -17.127747579397575],
           [177.2355489175745, -17.118888761201628]]],
         [[[178.5420542455655, -16.642710899810915],
           [178.5420542455655, -16.6598150547425],
           [178.58187968501863, -16.6598150547425],
           [178.58187968501863, -16.642710899810915]]],
         [[[178.5969858861905, -16.76175038095754],
           [178.5969858861905, -16.7998799019452],
           [178.6347513891202, -16.7998799019452],
           [178.6347513891202, -16.76175038095754]]],
         [[[178.74186808833895, -16.93787088042479],
           [178.74186808833895, -16.962829891342324],
           [178.78650004634676, -16.962829891342324],
           [178.78650004634676, -16.93787088042479]]],
         [[[178.855164597128, -16.637447775748853],
           [178.855164597128, -16.65257886788087],
           [178.87301738033113, -16.65257886788087],
           [178.87301738033113, -16.637447775748853]]],
         [[[178.657410690878, -16.709145398154718],
           [178.657410690878, -16.801194576488346],
           [178.7288218236905, -16.801194576488346],
           [178.7288218236905, -16.709145398154718]]],
         [[[178.87439067134676, -16.84851678909791],
           [178.87439067134676, -16.861002623003312],
           [178.89087016353426, -16.861002623003312],
           [178.89087016353426, -16.84851678909791]]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var countries = ee.FeatureCollection('USDOS/LSIB_SIMPLE/2017');
var styleParams = {
  fillColor: 'b5ffb4',
  color: '868686',
  width: 2.5,
  opacity: 0.6,
};

var burkinafaso = countries.filter(ee.Filter.eq('country_co', 'UV'));
Map.addLayer(burkinafaso, styleParams, 'Burkina Faso');

var mali = countries.filter(ee.Filter.eq('country_co', 'ML'));
Map.addLayer(mali, styleParams, 'Mali');

var niger = countries.filter(ee.Filter.eq('country_co', 'NG'));
Map.addLayer(niger, styleParams, 'Niger');

var senegal = countries.filter(ee.Filter.eq('country_co', 'SG'));
Map.addLayer(senegal, styleParams, 'Senegal');

var gambia = countries.filter(ee.Filter.eq('country_co', 'GA'));
Map.addLayer(gambia, styleParams, 'Gambia');

var ethiopia = countries.filter(ee.Filter.eq('country_co', 'ET'));
Map.addLayer(ethiopia, styleParams, 'Ethiopia');

var mauritania = countries.filter(ee.Filter.eq('country_co', 'MR'));
Map.addLayer(mauritania, styleParams, 'Mauritania');

var nigeria = countries.filter(ee.Filter.eq('country_co', 'NI'));
Map.addLayer(nigeria, styleParams, 'Nigeria');

var sudan = countries.filter(ee.Filter.eq('country_co', 'SU'));
Map.addLayer(sudan, styleParams, 'Sudan');

var fiji = countries.filter(ee.Filter.eq('country_co', 'FJ'));
Map.addLayer(fiji, styleParams, 'Fiji');

var haiti = countries.filter(ee.Filter.eq('country_co', 'HA'));
Map.addLayer(haiti, styleParams, 'Haiti');

//

var first = ee.FeatureCollection('users/lkmills/GGW_RESTOR_2013-2015');
Map.addLayer(first, {color: 'FF0000'}, '2013-2015'); // red

print(first);

var second = ee.FeatureCollection('users/lkmills/GGW_RESTOR_2016-2018');
Map.addLayer(second, {color: '00FF00'}, '2016-2018'); // green

print(second);

var third = ee.FeatureCollection('users/lkmills/GGW_RESTOR_2019-2020');
Map.addLayer(third, {color: '0000FF'}, '2019-2020'); // blue

print(third);

var fourth = ee.FeatureCollection('users/lkmills/GGW_RESTOR_2019-2020_FIJI');
Map.addLayer(fourth, {color: '0000FF'}, 'Fiji points');


var combinedFeatureCollection1 = first.merge(second);
var combinedFeatureCollection2 = combinedFeatureCollection1.merge(third);

//print(combinedFeatureCollection2);

Map.addLayer(combinedFeatureCollection2, {color: 'yellow'}, 'Combined FeatureCollection');

var modisNDVI = ee.ImageCollection('MODIS/006/MOD13Q1')
              .select('NDVI')
              .map(
                      function(img) {
                        var rescaled_NDVI = img.select('NDVI')
                                                .multiply(0.0001)
                                                .rename('NDVI_rescaled');
                        return img.addBands(rescaled_NDVI);
                   
  }
);

var ndvi_func_2000 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2000: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2001 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2001: meanDictionary.get('NDVI_rescaled')})
};


var ndvi_func_2002 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2002: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2003 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2003: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2004 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2004: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2005 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2005: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2006 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2006: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2007 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2007: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2008 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2008: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2009 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2009: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2010 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2010: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2011 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2011: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2012 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2012: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2013 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2013: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2014 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2014: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2015 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2015: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2016 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2016: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2017 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2017: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2018 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2018: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2019 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2019: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2020 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2020-01-01', '2020-08-07'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2020: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_2000 = combinedFeatureCollection2.map(ndvi_func_2000);
var ndvi_2001 = ndvi_2000.map(ndvi_func_2001);
var ndvi_2002 = ndvi_2001.map(ndvi_func_2002);
var ndvi_2003 = ndvi_2002.map(ndvi_func_2003);
var ndvi_2004 = ndvi_2003.map(ndvi_func_2004);
var ndvi_2005 = ndvi_2004.map(ndvi_func_2005);
var ndvi_2006 = ndvi_2005.map(ndvi_func_2006);
var ndvi_2007 = ndvi_2006.map(ndvi_func_2007);
var ndvi_2008 = ndvi_2007.map(ndvi_func_2008);
var ndvi_2009 = ndvi_2008.map(ndvi_func_2009);
var ndvi_2010 = ndvi_2009.map(ndvi_func_2010);
var ndvi_2011 = ndvi_2010.map(ndvi_func_2011);
var ndvi_2012 = ndvi_2011.map(ndvi_func_2012);
var ndvi_2013 = ndvi_2012.map(ndvi_func_2013);
var ndvi_2014 = ndvi_2013.map(ndvi_func_2014);
var ndvi_2015 = ndvi_2014.map(ndvi_func_2015);
var ndvi_2016 = ndvi_2015.map(ndvi_func_2016);
var ndvi_2017 = ndvi_2016.map(ndvi_func_2017);
var ndvi_2018 = ndvi_2017.map(ndvi_func_2018);
var ndvi_2019 = ndvi_2018.map(ndvi_func_2019);
var ndvi_2020 = ndvi_2019.map(ndvi_func_2020);
//print(ndvi_2020);


//Export.table.toDrive({
  //collection: ndvi_2020, 
  //description: 'ndvi_2020', 
  //selectors: ['Name', 'NDVI_2000', 'NDVI_2001', 'NDVI_2002', 'NDVI_2003', 'NDVI_2004', 
  //'NDVI_2005', 'NDVI_2006', 'NDVI_2007', 'NDVI_2008', 'NDVI_2009', 'NDVI_2010', 
  //'NDVI_2011', 'NDVI_2012', 'NDVI_2013', 'NDVI_2014', 'NDVI_2015', 'NDVI_2016', 
  //'NDVI_2017', 'NDVI_2018', 'NDVI_2019', 'NDVI_2020'] 
//});

//Export.table.toDrive({
  //collection: random_ndvi_2020, 
  //description: 'ndvi_2020', 
  //selectors: ['Name', 'NDVI_2000', 'NDVI_2001', 'NDVI_2002', 'NDVI_2003', 'NDVI_2004', 
  //'NDVI_2005', 'NDVI_2006', 'NDVI_2007', 'NDVI_2008', 'NDVI_2009', 'NDVI_2010', 
  //'NDVI_2011', 'NDVI_2012', 'NDVI_2013', 'NDVI_2014', 'NDVI_2015', 'NDVI_2016', 
  //'NDVI_2017', 'NDVI_2018', 'NDVI_2019', 'NDVI_2020'] 
//});

var randomPoints1 = ee.FeatureCollection.randomPoints(geometry, 1000);
Map.addLayer(randomPoints1, {color:'green'});
print(randomPoints1);

var randomPoints2 = ee.FeatureCollection.randomPoints(geometry, 1000);
print(randomPoints2);
Map.addLayer(randomPoints2, {color:'blue'});
var randomPoints3 = ee.FeatureCollection.randomPoints(geometry, 1000);
var randomPoints4 = ee.FeatureCollection.randomPoints(geometry, 1000);
var randomPoints5 = ee.FeatureCollection.randomPoints(geometry, 1000);
var randomPoints6 = ee.FeatureCollection.randomPoints(geometry, 1000);
var randomPoints7 = ee.FeatureCollection.randomPoints(geometry, 1000);
var randomPoints8 = ee.FeatureCollection.randomPoints(geometry, 1000);
var randomPoints9 = ee.FeatureCollection.randomPoints(geometry, 1000);
var randomPoints10 = ee.FeatureCollection.randomPoints(geometry, 1000);

//Map.addLayer(randomPoints, {}, 'random points');

var bufferPoly = function(feature) {
  return feature.buffer(500);   // substitute in your value of Z here
};

var bufferedPolys = randomPoints.map(bufferPoly);
//print(bufferedPolys);
//Map.addLayer(bufferedPolys, {color: 'red'}, 'bufferedPolys');

var random_ndvi_2000 = bufferedPolys.map(ndvi_func_2000);
var random_ndvi_2001 = random_ndvi_2000.map(ndvi_func_2001);
var random_ndvi_2002 = random_ndvi_2001.map(ndvi_func_2002);
var random_ndvi_2003 = random_ndvi_2002.map(ndvi_func_2003);
var random_ndvi_2004 = random_ndvi_2003.map(ndvi_func_2004);
var random_ndvi_2005 = random_ndvi_2004.map(ndvi_func_2005);
var random_ndvi_2006 = random_ndvi_2005.map(ndvi_func_2006);
var random_ndvi_2007 = random_ndvi_2006.map(ndvi_func_2007);
var random_ndvi_2008 = random_ndvi_2007.map(ndvi_func_2008);
var random_ndvi_2009 = random_ndvi_2008.map(ndvi_func_2009);
var random_ndvi_2010 = random_ndvi_2009.map(ndvi_func_2010);
var random_ndvi_2011 = random_ndvi_2010.map(ndvi_func_2011);
var random_ndvi_2012 = random_ndvi_2011.map(ndvi_func_2012);
var random_ndvi_2013 = random_ndvi_2012.map(ndvi_func_2013);
var random_ndvi_2014 = random_ndvi_2013.map(ndvi_func_2014);
var random_ndvi_2015 = random_ndvi_2014.map(ndvi_func_2015);
var random_ndvi_2016 = random_ndvi_2015.map(ndvi_func_2016);
var random_ndvi_2017 = random_ndvi_2016.map(ndvi_func_2017);
var random_ndvi_2018 = random_ndvi_2017.map(ndvi_func_2018);
var random_ndvi_2019 = random_ndvi_2018.map(ndvi_func_2019);
var random_ndvi_2020 = random_ndvi_2019.map(ndvi_func_2020);
//print(random_ndvi_2020);