var fiji = ee.FeatureCollection('users/lkmills/GGW_RESTOR_2019-2020_FIJI');
Map.addLayer(fiji, {color: '0000FF'}, 'Fiji points');

var bufferPoly = function(feature) {
  return feature.buffer(100);   // substitute in your value of Z here
};

var bufferedFiji = fiji.map(bufferPoly);
Map.addLayer(bufferedFiji, {color: 'red'}, 'bufferedFiji');

var modisNDVI = ee.ImageCollection('MODIS/006/MOD13Q1')
              .select('NDVI')
              .map(
                      function(img) {
                        var rescaled_NDVI = img.select('NDVI')
                                                .multiply(0.0001)
                                                .rename('NDVI_rescaled');
                        return img.addBands(rescaled_NDVI);
                   
  }
);

var ndvi_func_2000 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2000: meanDictionary.get('NDVI_rescaled')})
};

//var ndvi_2000 = combinedFeatureCollecion2.map(ndvi_func_2000);

var ndvi_func_2001 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2001: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2002 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2002: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2003 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
      reducer: ee.Reducer.mean(),
      geometry: feature.geometry(),
      scale: 30,
      maxPixels: 1e9
    });
  return feature.set({NDVI_2003: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2004 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2004: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2005 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2005: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2006 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2006: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2007 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2007: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2008 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2008: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2009 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2009: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2010 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2010: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2011 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2011: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2012 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2012: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2013 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2013: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2014 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2014: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2015 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2015: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2016 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2016: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2017 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2017: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2018 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2018: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2019 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2019: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_func_2020 = function(feature) {
  var collection = ee.ImageCollection(modisNDVI.filterDate('2020-01-01', '2020-08-07'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({NDVI_2020: meanDictionary.get('NDVI_rescaled')})
};

var ndvi_2000 = bufferedFiji.map(ndvi_func_2000);
var ndvi_2001 = ndvi_2000.map(ndvi_func_2001);
var ndvi_2002 = ndvi_2001.map(ndvi_func_2002);
var ndvi_2003 = ndvi_2002.map(ndvi_func_2003);
var ndvi_2004 = ndvi_2003.map(ndvi_func_2004);
var ndvi_2005 = ndvi_2004.map(ndvi_func_2005);
var ndvi_2006 = ndvi_2005.map(ndvi_func_2006);
var ndvi_2007 = ndvi_2006.map(ndvi_func_2007);
var ndvi_2008 = ndvi_2007.map(ndvi_func_2008);
var ndvi_2009 = ndvi_2008.map(ndvi_func_2009);
var ndvi_2010 = ndvi_2009.map(ndvi_func_2010);
var ndvi_2011 = ndvi_2010.map(ndvi_func_2011);
var ndvi_2012 = ndvi_2011.map(ndvi_func_2012);
var ndvi_2013 = ndvi_2012.map(ndvi_func_2013);
var ndvi_2014 = ndvi_2013.map(ndvi_func_2014);
var ndvi_2015 = ndvi_2014.map(ndvi_func_2015);
var ndvi_2016 = ndvi_2015.map(ndvi_func_2016);
var ndvi_2017 = ndvi_2016.map(ndvi_func_2017);
var ndvi_2018 = ndvi_2017.map(ndvi_func_2018);
var ndvi_2019 = ndvi_2018.map(ndvi_func_2019);
var ndvi_2020 = ndvi_2019.map(ndvi_func_2020);

Export.table.toDrive({
  collection: ndvi_2020, 
  description: 'ndvi_2020', 
  selectors: ['Name', 'NDVI_2000', 'NDVI_2001', 'NDVI_2002', 'NDVI_2003', 'NDVI_2004', 
  'NDVI_2005', 'NDVI_2006', 'NDVI_2007', 'NDVI_2008', 'NDVI_2009', 'NDVI_2010', 
  'NDVI_2011', 'NDVI_2012', 'NDVI_2013', 'NDVI_2014', 'NDVI_2015', 'NDVI_2016', 
  'NDVI_2017', 'NDVI_2018', 'NDVI_2019', 'NDVI_2020'] 
});

var nighttimeLights = ee.ImageCollection('NOAA/DMSP-OLS/NIGHTTIME_LIGHTS').filter(ee.Filter.date('2000-01-01', '2020-08-07')).select('avg_vis');

var nighttimeLights_func_2000 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({avg_vis_2000: meanDictionary.get('avg_vis')})
};

var nighttimeLights_func_2001 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({avg_vis_2001: meanDictionary.get('avg_vis')})
};


var nighttimeLights_func_2002 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({avg_vis_2002: meanDictionary.get('avg_vis')})
};

var nighttimeLights_func_2003 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({avg_vis_2003: meanDictionary.get('avg_vis')})
};

var nighttimeLights_func_2004 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({avg_vis_2004: meanDictionary.get('avg_vis')})
};

var nighttimeLights_func_2005 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({avg_vis_2005: meanDictionary.get('avg_vis')})
};

var nighttimeLights_func_2006 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({avg_vis_2006: meanDictionary.get('avg_vis')})
};

var nighttimeLights_func_2007 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({avg_vis_2007: meanDictionary.get('avg_vis')})
};

var nighttimeLights_func_2008 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({avg_vis_2008: meanDictionary.get('avg_vis')})
};

var nighttimeLights_func_2009 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({avg_vis_2009: meanDictionary.get('avg_vis')})
};

var nighttimeLights_func_2010 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({avg_vis_2010: meanDictionary.get('avg_vis')})
};

var nighttimeLights_func_2011 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({avg_vis_2011: meanDictionary.get('avg_vis')})
};

var nighttimeLights_func_2012 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({avg_vis_2012: meanDictionary.get('avg_vis')})
};

var nighttimeLights_func_2013 = function(feature) {
  var collection = ee.ImageCollection(nighttimeLights.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({avg_vis_2013: meanDictionary.get('avg_vis')})
};

var nighttimeLights_2000 = bufferedFiji.map(nighttimeLights_func_2000);
var nighttimeLights_2001 = nighttimeLights_2000.map(nighttimeLights_func_2001);
var nighttimeLights_2002 = nighttimeLights_2001.map(nighttimeLights_func_2002);
var nighttimeLights_2003 = nighttimeLights_2002.map(nighttimeLights_func_2003);
var nighttimeLights_2004 = nighttimeLights_2003.map(nighttimeLights_func_2004);
var nighttimeLights_2005 = nighttimeLights_2004.map(nighttimeLights_func_2005);
var nighttimeLights_2006 = nighttimeLights_2005.map(nighttimeLights_func_2006);
var nighttimeLights_2007 = nighttimeLights_2006.map(nighttimeLights_func_2007);
var nighttimeLights_2008 = nighttimeLights_2007.map(nighttimeLights_func_2008);
var nighttimeLights_2009 = nighttimeLights_2008.map(nighttimeLights_func_2009);
var nighttimeLights_2010 = nighttimeLights_2009.map(nighttimeLights_func_2010);
var nighttimeLights_2011 = nighttimeLights_2010.map(nighttimeLights_func_2011);
var nighttimeLights_2012 = nighttimeLights_2011.map(nighttimeLights_func_2012);
var nighttimeLights_2013 = nighttimeLights_2012.map(nighttimeLights_func_2013);
//print(nighttimeLights_2013);

Export.table.toDrive({
  collection: nighttimeLights_2013, 
  description: 'nighttimeLights_2013', 
  selectors: ['Name', 'avg_vis_2000', 'avg_vis_2001', 'avg_vis_2002', 'avg_vis_2003', 'avg_vis_2004', 
  'avg_vis_2005', 'avg_vis_2006', 'avg_vis_2007', 'avg_vis_2008', 'avg_vis_2009', 'avg_vis_2010', 
  'avg_vis_2011', 'avg_vis_2012', 'avg_vis_2013'] 
});

var pop = ee.ImageCollection("CIESIN/GPWv411/GPW_Basic_Demographic_Characteristics").first().select('basic_demographic_characteristics');

var pop_func = function(feature) {
  var collection = pop;
  var clipped = collection.clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({basic_demographic_characteristics: meanDictionary.get('basic_demographic_characteristics')})
};

var pop_value = bufferedFiji.map(pop_func);
//print(pop_value);

Export.table.toDrive({
  collection: pop_value, 
  description: 'pop_value', 
  selectors: ['Name', 'basic_demographic_characteristics'] 
});

var elevation_func = function(feature) {
  var collection = ee.Image('CGIAR/SRTM90_V4').select('elevation');
  var clipped = collection.clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({elevation: meanDictionary.get('elevation')})
};

var elevation = bufferedFiji.map(elevation_func)

Export.table.toDrive({
  collection: elevation, 
  description: 'elevation', 
  selectors: ['Name', 'elevation'] 
});

var total_precipitation = ee.ImageCollection("ECMWF/ERA5/MONTHLY").select('total_precipitation').filter(ee.Filter.date('2000-01-01', '2020-06-01'));

var total_precipitation_func_2000 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2000: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2001 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2001: meanDictionary.get('total_precipitation')})
};


var total_precipitation_func_2002 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2002: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2003 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2003: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2004 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2004: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2005 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2005: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2006 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2006: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2007 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2007: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2008 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2008: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2009 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2009: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2010 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2010: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2011 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2011: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2012 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2012: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2013 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2013: meanDictionary.get('total_precipitation')})
};

var total_precipitation_func_2014 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2014: meanDictionary.get('total_precipitation')})
};


var total_precipitation_func_2015 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2015: meanDictionary.get('total_precipitation')})
};


var total_precipitation_func_2016 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2016: meanDictionary.get('total_precipitation')})
};


var total_precipitation_func_2017 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2017: meanDictionary.get('total_precipitation')})
};


var total_precipitation_func_2018 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2018: meanDictionary.get('total_precipitation')})
};


var total_precipitation_func_2019 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2019: meanDictionary.get('total_precipitation')})
};


var total_precipitation_func_2020 = function(feature) {
  var collection = ee.ImageCollection(total_precipitation.filterDate('2020-01-01', '2020-06-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({total_precipitation_2020: meanDictionary.get('total_precipitation')})
};

var total_precipitation_2000 = bufferedFiji.map(total_precipitation_func_2000);
var total_precipitation_2001 = total_precipitation_2000.map(total_precipitation_func_2001);
var total_precipitation_2002 = total_precipitation_2001.map(total_precipitation_func_2002);
var total_precipitation_2003 = total_precipitation_2002.map(total_precipitation_func_2003);
var total_precipitation_2004 = total_precipitation_2003.map(total_precipitation_func_2004);
var total_precipitation_2005 = total_precipitation_2004.map(total_precipitation_func_2005);
var total_precipitation_2006 = total_precipitation_2005.map(total_precipitation_func_2006);
var total_precipitation_2007 = total_precipitation_2006.map(total_precipitation_func_2007);
var total_precipitation_2008 = total_precipitation_2007.map(total_precipitation_func_2008);
var total_precipitation_2009 = total_precipitation_2008.map(total_precipitation_func_2009);
var total_precipitation_2010 = total_precipitation_2009.map(total_precipitation_func_2010);
var total_precipitation_2011 = total_precipitation_2010.map(total_precipitation_func_2011);
var total_precipitation_2012 = total_precipitation_2011.map(total_precipitation_func_2012);
var total_precipitation_2013 = total_precipitation_2012.map(total_precipitation_func_2013);
var total_precipitation_2014 = total_precipitation_2013.map(total_precipitation_func_2014);
var total_precipitation_2015 = total_precipitation_2014.map(total_precipitation_func_2015);
var total_precipitation_2016 = total_precipitation_2015.map(total_precipitation_func_2016);
//print(total_precipitation_2016);

Export.table.toDrive({
  collection: total_precipitation_2016, 
  description: 'total_precipitation_2000_2016', 
  selectors: ['Name', 'total_precipitation_2000', 'total_precipitation_2001','total_precipitation_2002','total_precipitation_2003',
  'total_precipitation_2004','total_precipitation_2005','total_precipitation_2006','total_precipitation_2007','total_precipitation_2008',
  'total_precipitation_2009','total_precipitation_2010','total_precipitation_2011','total_precipitation_2012','total_precipitation_2013',
  'total_precipitation_2014', 'total_precipitation_2015', 'total_precipitation_2016'] 
});

var total_precipitation_2017 = bufferedFiji.map(total_precipitation_func_2017);
var total_precipitation_2018 = total_precipitation_2017.map(total_precipitation_func_2018);
var total_precipitation_2019 = total_precipitation_2018.map(total_precipitation_func_2019);
var total_precipitation_2020 = total_precipitation_2019.map(total_precipitation_func_2020);
//print(total_precipitation_2020);

Export.table.toDrive({
  collection: total_precipitation_2020, 
  description: 'total_precipitation_2017_2020', 
  selectors: ['Name', 'total_precipitation_2017', 'total_precipitation_2018','total_precipitation_2019','total_precipitation_2020'] 
});

var mean_2m_air_temperature = ee.ImageCollection("ECMWF/ERA5/MONTHLY").select('mean_2m_air_temperature').filter(ee.Filter.date('2000-01-01', '2020-06-01'));

var mean_2m_air_temperature_func_2000 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2000: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2001 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2001: meanDictionary.get('mean_2m_air_temperature')})
};


var mean_2m_air_temperature_func_2002 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2002: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2003 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2003: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2004 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2004: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2005 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2005: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2006 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2006: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2007 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2007: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2008 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2008: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2009 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2009: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2010 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2010: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2011 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2011: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2012 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2012: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2013 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2013: meanDictionary.get('mean_2m_air_temperature')})
};

var mean_2m_air_temperature_func_2014 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2014: meanDictionary.get('mean_2m_air_temperature')})
};


var mean_2m_air_temperature_func_2015 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2015: meanDictionary.get('mean_2m_air_temperature')})
};


var mean_2m_air_temperature_func_2016 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2016: meanDictionary.get('mean_2m_air_temperature')})
};


var mean_2m_air_temperature_func_2017 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2017: meanDictionary.get('mean_2m_air_temperature')})
};


var mean_2m_air_temperature_func_2018 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2018: meanDictionary.get('mean_2m_air_temperature')})
};


var mean_2m_air_temperature_func_2019 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2019: meanDictionary.get('mean_2m_air_temperature')})
};


var mean_2m_air_temperature_func_2020 = function(feature) {
  var collection = ee.ImageCollection(mean_2m_air_temperature.filterDate('2020-01-01', '2020-06-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({mean_2m_air_temperature_2020: meanDictionary.get('mean_2m_air_temperature')})
};


var mean_2m_air_temperature_2000 = bufferedFiji.map(mean_2m_air_temperature_func_2000);
var mean_2m_air_temperature_2001 = mean_2m_air_temperature_2000.map(mean_2m_air_temperature_func_2001);
var mean_2m_air_temperature_2002 = mean_2m_air_temperature_2001.map(mean_2m_air_temperature_func_2002);
var mean_2m_air_temperature_2003 = mean_2m_air_temperature_2002.map(mean_2m_air_temperature_func_2003);
var mean_2m_air_temperature_2004 = mean_2m_air_temperature_2003.map(mean_2m_air_temperature_func_2004);
var mean_2m_air_temperature_2005 = mean_2m_air_temperature_2004.map(mean_2m_air_temperature_func_2005);
var mean_2m_air_temperature_2006 = mean_2m_air_temperature_2005.map(mean_2m_air_temperature_func_2006);
var mean_2m_air_temperature_2007 = mean_2m_air_temperature_2006.map(mean_2m_air_temperature_func_2007);
var mean_2m_air_temperature_2008 = mean_2m_air_temperature_2007.map(mean_2m_air_temperature_func_2008);
var mean_2m_air_temperature_2009 = mean_2m_air_temperature_2008.map(mean_2m_air_temperature_func_2009);
var mean_2m_air_temperature_2010 = mean_2m_air_temperature_2009.map(mean_2m_air_temperature_func_2010);
var mean_2m_air_temperature_2011 = mean_2m_air_temperature_2010.map(mean_2m_air_temperature_func_2011);
var mean_2m_air_temperature_2012 = mean_2m_air_temperature_2011.map(mean_2m_air_temperature_func_2012);
var mean_2m_air_temperature_2013 = mean_2m_air_temperature_2012.map(mean_2m_air_temperature_func_2013);
var mean_2m_air_temperature_2014 = mean_2m_air_temperature_2013.map(mean_2m_air_temperature_func_2014);
var mean_2m_air_temperature_2015 = mean_2m_air_temperature_2014.map(mean_2m_air_temperature_func_2015);
var mean_2m_air_temperature_2016 = mean_2m_air_temperature_2015.map(mean_2m_air_temperature_func_2016);
//print(mean_2m_air_temperature_2016);

Export.table.toDrive({
  collection: mean_2m_air_temperature_2016, 
  description: 'mean_2m_air_temperature_2000_2016', 
  selectors: ['Name', 'mean_2m_air_temperature_2000', 'mean_2m_air_temperature_2001','mean_2m_air_temperature_2002','mean_2m_air_temperature_2003',
  'mean_2m_air_temperature_2004','mean_2m_air_temperature_2005','mean_2m_air_temperature_2006','mean_2m_air_temperature_2007','mean_2m_air_temperature_2008',
  'mean_2m_air_temperature_2009','mean_2m_air_temperature_2010','mean_2m_air_temperature_2011','mean_2m_air_temperature_2012','mean_2m_air_temperature_2013',
  'mean_2m_air_temperature_2014', 'mean_2m_air_temperature_2015', 'mean_2m_air_temperature_2016'] 
});

var mean_2m_air_temperature_2017 = bufferedFiji.map(mean_2m_air_temperature_func_2017);
var mean_2m_air_temperature_2018 = mean_2m_air_temperature_2017.map(mean_2m_air_temperature_func_2018);
var mean_2m_air_temperature_2019 = mean_2m_air_temperature_2018.map(mean_2m_air_temperature_func_2019);
var mean_2m_air_temperature_2020 = mean_2m_air_temperature_2019.map(mean_2m_air_temperature_func_2020);
//print(mean_2m_air_temperature_2020);

Export.table.toDrive({
  collection: mean_2m_air_temperature_2020, 
  description: 'mean_2m_air_temperature_2017_2020', 
  selectors: ['Name', 'mean_2m_air_temperature_2017', 'mean_2m_air_temperature_2018','mean_2m_air_temperature_2019','mean_2m_air_temperature_2020'] 
});

var LST_Day_1km = ee.ImageCollection('MODIS/006/MOD11A2').select('LST_Day_1km').filter(ee.Filter.date('2000-01-01', '2020-07-27'));

var LST_Day_1km_func_2000 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2000: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2001 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2001: meanDictionary.get('LST_Day_1km')})
};


var LST_Day_1km_func_2002 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2002: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2003 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2003: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2004 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2004: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2005 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2005: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2006 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2006: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2007 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2007: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2008 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2008: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2009 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2009: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2010 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2010: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2011 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2011: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2012 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2012: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2013 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2013: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2014 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2014: meanDictionary.get('LST_Day_1km')})
};


var LST_Day_1km_func_2015 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2015: meanDictionary.get('LST_Day_1km')})
};

var LST_Day_1km_func_2016 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2016: meanDictionary.get('LST_Day_1km')})
};


var LST_Day_1km_func_2017 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2017: meanDictionary.get('LST_Day_1km')})
};


var LST_Day_1km_func_2018 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2018: meanDictionary.get('LST_Day_1km')})
};


var LST_Day_1km_func_2019 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2019: meanDictionary.get('LST_Day_1km')})
};


var LST_Day_1km_func_2020 = function(feature) {
  var collection = ee.ImageCollection(LST_Day_1km.filterDate('2020-01-01', '2020-07-27'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({LST_Day_1km_2020: meanDictionary.get('LST_Day_1km')})
};


var LST_Day_1km_2000 = bufferedFiji.map(LST_Day_1km_func_2000);
var LST_Day_1km_2001 = LST_Day_1km_2000.map(LST_Day_1km_func_2001);
var LST_Day_1km_2002 = LST_Day_1km_2001.map(LST_Day_1km_func_2002);
var LST_Day_1km_2003 = LST_Day_1km_2002.map(LST_Day_1km_func_2003);
var LST_Day_1km_2004 = LST_Day_1km_2003.map(LST_Day_1km_func_2004);
var LST_Day_1km_2005 = LST_Day_1km_2004.map(LST_Day_1km_func_2005);
var LST_Day_1km_2006 = LST_Day_1km_2005.map(LST_Day_1km_func_2006);
var LST_Day_1km_2007 = LST_Day_1km_2006.map(LST_Day_1km_func_2007);
var LST_Day_1km_2008 = LST_Day_1km_2007.map(LST_Day_1km_func_2008);
var LST_Day_1km_2009 = LST_Day_1km_2008.map(LST_Day_1km_func_2009);
var LST_Day_1km_2010 = LST_Day_1km_2009.map(LST_Day_1km_func_2010);
var LST_Day_1km_2011 = LST_Day_1km_2010.map(LST_Day_1km_func_2011);
var LST_Day_1km_2012 = LST_Day_1km_2011.map(LST_Day_1km_func_2012);
var LST_Day_1km_2013 = LST_Day_1km_2012.map(LST_Day_1km_func_2013);
var LST_Day_1km_2014 = LST_Day_1km_2013.map(LST_Day_1km_func_2014);
var LST_Day_1km_2015 = LST_Day_1km_2014.map(LST_Day_1km_func_2015);
var LST_Day_1km_2016 = LST_Day_1km_2015.map(LST_Day_1km_func_2016);
//print(LST_Day_1km_2016);
var LST_Day_1km_2017 = LST_Day_1km_2016.map(LST_Day_1km_func_2017);
var LST_Day_1km_2018 = LST_Day_1km_2017.map(LST_Day_1km_func_2018);
var LST_Day_1km_2019 = LST_Day_1km_2018.map(LST_Day_1km_func_2019);
var LST_Day_1km_2020 = LST_Day_1km_2019.map(LST_Day_1km_func_2020);
//print(LST_Day_1km_2020);

Export.table.toDrive({
  collection: LST_Day_1km_2016, 
  description: 'LST_Day_1km_2000_2016', 
  selectors: ['Name', 'LST_Day_1km_2000', 'LST_Day_1km_2001','LST_Day_1km_2002','LST_Day_1km_2003', 'LST_Day_1km_2004','LST_Day_1km_2005','LST_Day_1km_2006','LST_Day_1km_2007','LST_Day_1km_2008', 'LST_Day_1km_2009','LST_Day_1km_2010','LST_Day_1km_2011','LST_Day_1km_2012','LST_Day_1km_2013',
  'LST_Day_1km_2014', 'LST_Day_1km_2015', 'LST_Day_1km_2016'] 
});

Export.table.toDrive({
  collection: LST_Day_1km_2020, 
  description: 'LST_Day_1km_2017_2020', 
  selectors: ['Name', 'LST_Day_1km_2017', 'LST_Day_1km_2018','LST_Day_1km_2019','LST_Day_1km_2020'] 
});

var modisEVI = ee.ImageCollection('MODIS/006/MOD13Q1')
              .select('EVI')
              .map(
                      function(img) {
                        var rescaled_EVI = img.select('EVI')
                                                .multiply(0.0001)
                                                .rename('EVI_rescaled');
                        return img.addBands(rescaled_EVI);
                   
  }
);

var EVI_func_2000 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2000: meanDictionary.get('EVI_rescaled')})
};

var EVI_2000 = bufferedFiji.map(EVI_func_2000);

var EVI_func_2001 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2001: meanDictionary.get('EVI_rescaled')})
};


var EVI_func_2002 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2002: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2003 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2003: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2004 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2004: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2005 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2005: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2006 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2006: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2007 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2007: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2008 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2008: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2009 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2009: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2010 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2010: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2011 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2011: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2012 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2012: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2013 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2013: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2014 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2014: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2015 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2015: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2016 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2016: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2017 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2017: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2018 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2018: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2019 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2019-01-01', '2019-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2019: meanDictionary.get('EVI_rescaled')})
};

var EVI_func_2020 = function(feature) {
  var collection = ee.ImageCollection(modisEVI.filterDate('2020-01-01', '2020-08-07'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({EVI_2020: meanDictionary.get('EVI_rescaled')})
};

var EVI_2000 = bufferedFiji.map(EVI_func_2000);
var EVI_2001 = EVI_2000.map(EVI_func_2001);
var EVI_2002 = EVI_2001.map(EVI_func_2002);
var EVI_2003 = EVI_2002.map(EVI_func_2003);
var EVI_2004 = EVI_2003.map(EVI_func_2004);
var EVI_2005 = EVI_2004.map(EVI_func_2005);
var EVI_2006 = EVI_2005.map(EVI_func_2006);
var EVI_2007 = EVI_2006.map(EVI_func_2007);
var EVI_2008 = EVI_2007.map(EVI_func_2008);
var EVI_2009 = EVI_2008.map(EVI_func_2009);
var EVI_2010 = EVI_2009.map(EVI_func_2010);
var EVI_2011 = EVI_2010.map(EVI_func_2011);
var EVI_2012 = EVI_2011.map(EVI_func_2012);
var EVI_2013 = EVI_2012.map(EVI_func_2013);
var EVI_2014 = EVI_2013.map(EVI_func_2014);
var EVI_2015 = EVI_2014.map(EVI_func_2015);
var EVI_2016 = EVI_2015.map(EVI_func_2016);
var EVI_2017 = EVI_2016.map(EVI_func_2017);
var EVI_2018 = EVI_2017.map(EVI_func_2018);
var EVI_2019 = EVI_2018.map(EVI_func_2019);
var EVI_2020 = EVI_2019.map(EVI_func_2020);
//print(EVI_2020);

Export.table.toDrive({
  collection: EVI_2020, 
  description: 'EVI_2020', 
  selectors: ['Name', 'EVI_2000', 'EVI_2001', 'EVI_2002', 'EVI_2003', 'EVI_2004', 
  'EVI_2005', 'EVI_2006', 'EVI_2007', 'EVI_2008', 'EVI_2009', 'EVI_2010', 
  'EVI_2011', 'EVI_2012', 'EVI_2013', 'EVI_2014', 'EVI_2015', 'EVI_2016', 
  'EVI_2017', 'EVI_2018', 'EVI_2019', 'EVI_2020'] 
});