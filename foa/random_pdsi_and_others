/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var senegal_geo = 
    /* color: #d63000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-15.935419569496862, 17.400296466944827],
          [-15.935419569496862, 15.64140476473296],
          [-13.683222303871862, 15.64140476473296],
          [-13.683222303871862, 17.400296466944827]]], null, false),
    gambia_geo = 
    /* color: #98ff00 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-15.847528944496862, 13.76763909100016],
          [-15.847528944496862, 13.126534479078398],
          [-13.946894178871862, 13.126534479078398],
          [-13.946894178871862, 13.76763909100016]]], null, false),
    burkina_geo = 
    /* color: #0b4a8b */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-0.6754098038718626, 15.192999903069644],
          [-0.6754098038718626, 12.837485651443595],
          [1.8514456648781374, 12.837485651443595],
          [1.8514456648781374, 15.192999903069644]]], null, false),
    niger_geo = 
    /* color: #ffc82d */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[2.7303519148781374, 15.21420351645174],
          [2.7303519148781374, 13.233503776931267],
          [5.762578477378137, 13.233503776931267],
          [5.762578477378137, 15.21420351645174]]], null, false),
    nigeria_geo = 
    /* color: #00ffff */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[8.781532046875968, 13.147932077241856],
          [8.781532046875968, 11.678033797874056],
          [11.308387515625968, 11.678033797874056],
          [11.308387515625968, 13.147932077241856]]], null, false),
    sudan_geo = 
    /* color: #bf04c2 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[35.66827892086889, 14.64692087532174],
          [35.66827892086889, 12.532663838397642],
          [36.87677501461889, 12.532663838397642],
          [36.87677501461889, 14.64692087532174]]], null, false),
    ethiopia_geo = 
    /* color: #ff0000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[39.11798595211889, 13.046921657124953],
          [39.11798595211889, 11.9528968822564],
          [40.59015392086889, 11.9528968822564],
          [40.59015392086889, 13.046921657124953]]], null, false),
    burkina_geo2 = 
    /* color: #00ff00 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-3.6550486582559882, 15.197931899407337],
          [-3.6550486582559882, 12.821044616332845],
          [-0.6667674082559882, 12.821044616332845],
          [-0.6667674082559882, 15.197931899407337]]], null, false),
    haiti_geo = 
    /* color: #0000ff */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-74.345835256931, 18.631250691039874],
          [-74.345835256931, 18.49455698810811],
          [-74.11649565732162, 18.49455698810811],
          [-74.11649565732162, 18.631250691039874]]], null, false),
    fiji_geo = 
    /* color: #999900 */
    /* displayProperties: [
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      },
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.MultiPolygon(
        [[[[177.98566935228126, -17.45024324779778],
           [177.98566935228126, -17.59167781883593],
           [178.2342350261094, -17.59167781883593],
           [178.2342350261094, -17.45024324779778]]],
         [[[177.41300699876564, -17.664970766527446],
           [177.41300699876564, -17.683289344183276],
           [177.45832560228126, -17.683289344183276],
           [177.45832560228126, -17.664970766527446]]],
         [[[178.5322391765, -17.664970766527446],
           [178.5322391765, -17.706839057479762],
           [178.576184489, -17.706839057479762],
           [178.576184489, -17.664970766527446]]],
         [[[178.5363590495469, -17.918647001003237],
           [178.5363590495469, -17.969600132593506],
           [178.5912906901719, -17.969600132593506],
           [178.5912906901719, -17.918647001003237]]],
         [[[178.55009195970314, -18.075378880805548],
           [178.55009195970314, -18.121066057589715],
           [178.6022770182969, -18.121066057589715],
           [178.6022770182969, -18.075378880805548]]],
         [[[178.44022867845314, -18.136727489977428],
           [178.44022867845314, -18.151082571281215],
           [178.45670817064064, -18.151082571281215],
           [178.45670817064064, -18.136727489977428]]],
         [[[178.80277750657814, -17.657119376396004],
           [178.80277750657814, -17.697681202616813],
           [178.83710978196876, -17.697681202616813],
           [178.83710978196876, -17.657119376396004]]],
         [[[178.5967838542344, -16.74801384057444],
           [178.5967838542344, -16.804552063457596],
           [178.7244999186875, -16.804552063457596],
           [178.7244999186875, -16.74801384057444]]],
         [[[178.54459879564064, -16.64146603341211],
           [178.54459879564064, -16.665148456638477],
           [178.5857975261094, -16.665148456638477],
           [178.5857975261094, -16.64146603341211]]],
         [[[178.69840738939064, -16.699351227742607],
           [178.69840738939064, -16.734863007888293],
           [178.76020548509376, -16.734863007888293],
           [178.76020548509376, -16.699351227742607]]],
         [[[178.8453495280625, -16.633571241877664],
           [178.8453495280625, -16.670410819593318],
           [178.9153873698594, -16.670410819593318],
           [178.9153873698594, -16.633571241877664]]],
         [[[178.850842692125, -16.83610095980561],
           [178.850842692125, -16.865016164476007],
           [178.916760660875, -16.865016164476007],
           [178.916760660875, -16.83610095980561]]],
         [[[178.72175333665626, -16.924147117443816],
           [178.72175333665626, -16.97931926002933],
           [178.79316446946876, -16.97931926002933],
           [178.79316446946876, -16.924147117443816]]],
         [[[177.2279327070064, -17.120346927195946],
           [177.2279327070064, -17.128221391357883],
           [177.24544216745562, -17.128221391357883],
           [177.24544216745562, -17.120346927195946]]],
         [[[179.86911465280718, -18.57219652967707],
           [179.86911465280718, -18.586515445017152],
           [179.88834072702593, -18.586515445017152],
           [179.88834072702593, -18.57219652967707]]],
         [[[179.93503262155718, -18.561782017758553],
           [179.93503262155718, -18.57349829895366],
           [179.9521987592525, -18.57349829895366],
           [179.9521987592525, -18.561782017758553]]],
         [[[-179.81708835012253, -18.94864133154798],
           [-179.81708835012253, -18.960330773777326],
           [-179.7992355669194, -18.960330773777326],
           [-179.7992355669194, -18.94864133154798]]],
         [[[-179.03801516924852, -17.96553930058264],
           [-179.03801516924852, -17.974724211305293],
           [-179.03355197344774, -17.974724211305293],
           [-179.03355197344774, -17.96553930058264]]],
         [[[-13.70867712774691, 16.723257484092045],
           [-13.70867712774691, 16.723257484092045],
           [-13.70867712774691, 16.723257484092045],
           [-13.70867712774691, 16.723257484092045]]],
         [[[-15.25774939337191, 15.67881983659573],
           [-15.25774939337191, 15.67881983659573],
           [-15.24676306524691, 15.67881983659573],
           [-15.24676306524691, 15.67881983659573]]]], null, false),
    test_geo = 
    /* color: #d63000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-12.013928121236827, 13.909051818291431],
          [-12.013928121236827, 13.09717909341545],
          [-11.200939839986827, 13.09717909341545],
          [-11.200939839986827, 13.909051818291431]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var countries = ee.FeatureCollection('USDOS/LSIB_SIMPLE/2017');
var styleParams = {
  fillColor: 'b5ffb4',
  color: '868686',
  width: 2.5,
  opacity: 0.6,
};

var burkinafaso = countries.filter(ee.Filter.eq('country_co', 'UV'));
Map.addLayer(burkinafaso, styleParams, 'Burkina Faso');

var mali = countries.filter(ee.Filter.eq('country_co', 'ML'));
Map.addLayer(mali, styleParams, 'Mali');

var niger = countries.filter(ee.Filter.eq('country_co', 'NG'));
Map.addLayer(niger, styleParams, 'Niger');

var senegal = countries.filter(ee.Filter.eq('country_co', 'SG'));
Map.addLayer(senegal, styleParams, 'Senegal');

var gambia = countries.filter(ee.Filter.eq('country_co', 'GA'));
Map.addLayer(gambia, styleParams, 'Gambia');

var ethiopia = countries.filter(ee.Filter.eq('country_co', 'ET'));
Map.addLayer(ethiopia, styleParams, 'Ethiopia');

var mauritania = countries.filter(ee.Filter.eq('country_co', 'MR'));
Map.addLayer(mauritania, styleParams, 'Mauritania');

var nigeria = countries.filter(ee.Filter.eq('country_co', 'NI'));
Map.addLayer(nigeria, styleParams, 'Nigeria');

var sudan = countries.filter(ee.Filter.eq('country_co', 'SU'));
Map.addLayer(sudan, styleParams, 'Sudan');

var fiji = countries.filter(ee.Filter.eq('country_co', 'FJ'));
Map.addLayer(fiji, styleParams, 'Fiji');

var haiti = countries.filter(ee.Filter.eq('country_co', 'HA'));
Map.addLayer(haiti, styleParams, 'Haiti');

//

var first = ee.FeatureCollection('users/lkmills/GGW_RESTOR_2013-2015');
//Map.addLayer(first, {color: 'FF0000'}, '2013-2015'); // red

//print(first);

var second = ee.FeatureCollection('users/lkmills/GGW_RESTOR_2016-2018');
//Map.addLayer(second, {color: '00FF00'}, '2016-2018'); // green

//print(second);

var third = ee.FeatureCollection('users/lkmills/GGW_RESTOR_2019-2020');
//Map.addLayer(third, {color: '0000FF'}, '2019-2020'); // blue

//print(third);

var fourth = ee.FeatureCollection('users/lkmills/GGW_RESTOR_2019-2020_FIJI');
//Map.addLayer(fourth, {color: '0000FF'}, 'Fiji points');


var combinedFeatureCollection1 = first.merge(second);
var combinedFeatureCollection2 = combinedFeatureCollection1.merge(third);
//Map.addLayer(combinedFeatureCollection2, {color: 'yellow'}, 'Combined FeatureCollection');

var centroids = function(feature) {
  return feature.set({centroid: feature.centroid()})
}

var centroids_fao = combinedFeatureCollection2.map(centroids);
//print(centroids_fao);
//Map.addLayer(centroids_fao, {color: 'purple'}, 'centroids_fao');

//Export.table.toDrive({
  //collection: centroids_fao, 
  //description: 'centroids_fao', 
  //selectors: ['centroids'] 
//});

var bufferPoly = function(feature) {
  return feature.buffer(500);   // substitute in your value of Z here
};

var randomPoints1 = ee.FeatureCollection.randomPoints(senegal_geo, 1000);
//Map.addLayer(randomPoints1, {color:'green'});
//print(randomPoints1);

var bufferedPolys1 = randomPoints1.map(bufferPoly);
//print(bufferedPolys1);
//Map.addLayer(bufferedPolys1, {color: 'red'}, 'bufferedPolys1');

var randomPoints2 = ee.FeatureCollection.randomPoints(gambia_geo, 1000);
var bufferedPolys2 = randomPoints2.map(bufferPoly);
Map.addLayer(randomPoints2);
Map.addLayer(bufferedPolys2, {color:'red'}, 'bufferedPolys2');

var randomPoints3 = ee.FeatureCollection.randomPoints(burkina_geo, 1000);
var bufferedPolys3 = randomPoints3.map(bufferPoly);
//Map.addLayer(randomPoints3);
//Map.addLayer(bufferedPolys3, {color:'red'});

var randomPoints4 = ee.FeatureCollection.randomPoints(niger_geo, 1000);
var bufferedPolys4 = randomPoints4.map(bufferPoly);
//Map.addLayer(randomPoints4);
//Map.addLayer(bufferedPolys4, {color:'red'});

var randomPoints5 = ee.FeatureCollection.randomPoints(nigeria_geo, 1000);
var bufferedPolys5 = randomPoints5.map(bufferPoly);
//Map.addLayer(randomPoints5);
//Map.addLayer(bufferedPolys5, {color:'red'});

var randomPoints6 = ee.FeatureCollection.randomPoints(sudan_geo, 1000);
var bufferedPolys6 = randomPoints6.map(bufferPoly);
//Map.addLayer(randomPoints6);
//Map.addLayer(bufferedPolys6, {color:'red'});

var randomPoints7 = ee.FeatureCollection.randomPoints(ethiopia_geo, 1000);
var bufferedPolys7 = randomPoints7.map(bufferPoly);
//Map.addLayer(randomPoints7);
//Map.addLayer(bufferedPolys7, {color:'red'});

var randomPoints8 = ee.FeatureCollection.randomPoints(burkina_geo2, 1000);
var bufferedPolys8 = randomPoints8.map(bufferPoly);
//Map.addLayer(randomPoints8);
//Map.addLayer(bufferedPolys8, {color:'red'});

var randomPoints9 = ee.FeatureCollection.randomPoints(haiti_geo, 1000);
var bufferedPolys9 = randomPoints9.map(bufferPoly);
//Map.addLayer(randomPoints9);
//Map.addLayer(bufferedPolys9, {color:'red'});

var randomPoints10 = ee.FeatureCollection.randomPoints(fiji_geo, 1000);
var bufferedPolys10 = randomPoints10.map(bufferPoly);
//Map.addLayer(randomPoints10);
//Map.addLayer(bufferedPolys10, {color:'red'});

var combinedrandomPoints1 = randomPoints1.merge(randomPoints2);
var combinedrandomPoints2 = combinedrandomPoints1.merge(randomPoints3);
var combinedrandomPoints3 = combinedrandomPoints2.merge(randomPoints4);
var combinedrandomPoints4 = combinedrandomPoints3.merge(randomPoints5);
var combinedrandomPoints5 = combinedrandomPoints4.merge(randomPoints6);
var combinedrandomPoints6 = combinedrandomPoints5.merge(randomPoints7);
var combinedrandomPoints7 = combinedrandomPoints6.merge(randomPoints8);
var combinedrandomPoints8 = combinedrandomPoints7.merge(randomPoints9);
var combinedrandomPoints = combinedrandomPoints8.merge(randomPoints10);
//print(combinedrandomPoints);
//Map.addLayer(combinedrandomPoints);

var coords = function(feature) {
  return feature.set({coords: feature.geometry().coordinates()});
}

var coords_randomPoints = combinedrandomPoints.map(coords);
//print(coords_randomPoints);

//Export.table.toDrive({
  //collection: coords_randomPoints, 
  //description: 'coords_randomPoints', 
  //selectors: ['coords'] 
//});

//Export.table.toDrive({
  //collection: combinedrandomPoints,
  //description:'randomPoints_shp',
  //fileFormat: 'SHP'
//});

var combinedrandomPolys1 = bufferedPolys1.merge(bufferedPolys2);
var combinedrandomPolys2 = combinedrandomPolys1.merge(bufferedPolys3);
var combinedrandomPolys3 = combinedrandomPolys2.merge(bufferedPolys4);
var combinedrandomPolys4 = combinedrandomPolys3.merge(bufferedPolys5);
var combinedrandomPolys5 = combinedrandomPolys4.merge(bufferedPolys6);
var combinedrandomPolys6 = combinedrandomPolys5.merge(bufferedPolys7);
var combinedrandomPolys7 = combinedrandomPolys6.merge(bufferedPolys8);
var combinedrandomPolys8 = combinedrandomPolys7.merge(bufferedPolys9);
var combinedrandomPolys = combinedrandomPolys8.merge(bufferedPolys10);

//Export.table.toDrive({
  //collection: combinedrandomPolys,
  //description:'randomPolys',
  //fileFormat: 'SHP'
//});

var pdsi = ee.ImageCollection('IDAHO_EPSCOR/TERRACLIMATE').filter(ee.Filter.date('2000-01-01', '2019-12-01')).select('pdsi');

var pdsi_func_2000 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2000-01-01', '2000-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2000: meanDictionary.get('pdsi')})
};

var pdsi_func_2001 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2001-01-01', '2001-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2001: meanDictionary.get('pdsi')})
};


var pdsi_func_2002 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2002-01-01', '2002-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2002: meanDictionary.get('pdsi')})
};

var pdsi_func_2003 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2003-01-01', '2003-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2003: meanDictionary.get('pdsi')})
};

var pdsi_func_2004 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2004-01-01', '2004-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2004: meanDictionary.get('pdsi')})
};

var pdsi_func_2005 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2005-01-01', '2005-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2005: meanDictionary.get('pdsi')})
};

var pdsi_func_2006 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2006-01-01', '2006-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2006: meanDictionary.get('pdsi')})
};

var pdsi_func_2007 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2007-01-01', '2007-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2007: meanDictionary.get('pdsi')})
};

var pdsi_func_2008 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2008-01-01', '2008-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2008: meanDictionary.get('pdsi')})
};

var pdsi_func_2009 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2009-01-01', '2009-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2009: meanDictionary.get('pdsi')})
};

var pdsi_func_2010 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2010-01-01', '2010-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2010: meanDictionary.get('pdsi')})
};

var pdsi_func_2011 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2011-01-01', '2011-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2011: meanDictionary.get('pdsi')})
};

var pdsi_func_2012 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2012-01-01', '2012-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2012: meanDictionary.get('pdsi')})
};

var pdsi_func_2013 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2013-01-01', '2013-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2013: meanDictionary.get('pdsi')})
};

var pdsi_func_2014 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2014-01-01', '2014-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2014: meanDictionary.get('pdsi')})
};


var pdsi_func_2015 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2015-01-01', '2015-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2015: meanDictionary.get('pdsi')})
};


var pdsi_func_2016 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2016-01-01', '2016-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2016: meanDictionary.get('pdsi')})
};


var pdsi_func_2017 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2017-01-01', '2017-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2017: meanDictionary.get('pdsi')})
};


var pdsi_func_2018 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2018-01-01', '2018-12-31'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2018: meanDictionary.get('pdsi')})
};


var pdsi_func_2019 = function(feature) {
  var collection = ee.ImageCollection(pdsi.filterDate('2019-01-01', '2019-12-01'));
  var clipped = collection.mean().clip(feature.geometry());
  var meanDictionary = clipped.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: feature.geometry(),
    scale: 30,
    maxPixels: 1e9
  });
  return feature.set({pdsi_2019: meanDictionary.get('pdsi')})
};

var randomPoints_test = ee.FeatureCollection.randomPoints(test_geo, 50);
var bufferedPolys_test = randomPoints_test.map(bufferPoly);
Map.addLayer(randomPoints_test);
Map.addLayer(bufferedPolys_test, {color:'red'}, 'bufferedPolys_test');

var pdsi_2000 = bufferedPolys2.map(pdsi_func_2000);
var pdsi_2001 = pdsi_2000.map(pdsi_func_2001);
var pdsi_2002 = pdsi_2001.map(pdsi_func_2002);
var pdsi_2003 = pdsi_2002.map(pdsi_func_2003);
var pdsi_2004 = pdsi_2003.map(pdsi_func_2004);
var pdsi_2005 = pdsi_2004.map(pdsi_func_2005);
var pdsi_2006 = pdsi_2005.map(pdsi_func_2006);
var pdsi_2007 = pdsi_2006.map(pdsi_func_2007);
var pdsi_2008 = pdsi_2007.map(pdsi_func_2008);
var pdsi_2009 = pdsi_2008.map(pdsi_func_2009);
var pdsi_2010 = pdsi_2009.map(pdsi_func_2010);
var pdsi_2011 = pdsi_2010.map(pdsi_func_2011);
var pdsi_2012 = pdsi_2011.map(pdsi_func_2012);
var pdsi_2013 = pdsi_2012.map(pdsi_func_2013);
var pdsi_2014 = pdsi_2013.map(pdsi_func_2014);
var pdsi_2015 = pdsi_2014.map(pdsi_func_2015);
var pdsi_2016 = pdsi_2015.map(pdsi_func_2016);
var pdsi_2017 = pdsi_2016.map(pdsi_func_2017);
var pdsi_2018 = pdsi_2017.map(pdsi_func_2018);
var pdsi_2019 = pdsi_2018.map(pdsi_func_2019);

//print(pdsi_2019);
Export.table.toDrive({
  collection: pdsi_2019, 
  description: 'pdsi_2019', 
  selectors: ['Name', 'pdsi_2000', 'pdsi_2001','pdsi_2002','pdsi_2003',
  'pdsi_2004','pdsi_2005','pdsi_2006','pdsi_2007','pdsi_2008',
  'pdsi_2009','pdsi_2010', 'pdsi_2011', 'pdsi_2012', 'pdsi_2013', 'pdsi_2014',
  'pdsi_2015', 'pdsi_2016', 'pdsi_2016', 'pdsi_2017', 'pdsi_2018', 'pdsi_2019'] 
});