var countries = ee.FeatureCollection('USDOS/LSIB_SIMPLE/2017');
var drcongo = countries.filter(ee.Filter.eq('country_co', 'CG'));
var styleParams = {
  fillColor: 'b5ffb4',
  color: '868686',
  width: 2.5,
  opacity: 0.6,
};
//Map.addLayer(drcongo, styleParams, 'DRC');
Map.setCenter(23.5, -2.5, 6);

var salonga = ee.FeatureCollection('WCMC/WDPA/current/polygons')
.filter(ee.Filter.and(
    ee.Filter.bounds(drcongo.geometry()),
    ee.Filter.eq('ORIG_NAME', 'Parc national de la Salonga')
  ));
//Map.addLayer(dataset, {}, 'Parc national de la Salonga');

var modisNDVI = ee.ImageCollection('MODIS/006/MOD13Q1')
              .select('NDVI')
              .map(
                      function(img) {
                        var rescaled_NDVI = img.select('NDVI')
                                                .multiply(0.0001)
                                                .rename('NDVI_rescaled');
                        return img.addBands(rescaled_NDVI);
                   
  }
);
                    
var modisNDVI_2000 = modisNDVI.filter(ee.Filter.date('2000-01-01', '2000-12-31'));
var modisNDVI_2000_clip = modisNDVI_2000.mean().clip(salonga);
var mean_dict_2000 = modisNDVI_2000_clip.reduceRegion({
  reducer: ee.Reducer.mean(),
  geometry: salonga.geometry(),
  scale: 500,
});

var modisNDVI_2001 = modisNDVI.filter(ee.Filter.date('2001-01-01', '2001-12-31'));
var modisNDVI_2001_clip = modisNDVI_2001.mean().clip(salonga);
var mean_dict_2001 = modisNDVI_2001_clip.reduceRegion({
  reducer: ee.Reducer.mean(),
  geometry: salonga.geometry(),
  scale: 500,
});

var dictionary = ee.Dictionary({
  2000: mean_dict_2000.get('NDVI_rescaled'),
  2001: mean_dict_2001.get('NDVI_rescaled')
});
print('Parc national de la Salonga Annual NDVI', dictionary);

var kahuzi_biega = ee.FeatureCollection('WCMC/WDPA/current/polygons')
.filter(ee.Filter.and(
    ee.Filter.bounds(drcongo.geometry()),
    ee.Filter.eq('ORIG_NAME', 'Parc national de Kahuzi-Biega')
  ));
//Map.addLayer(dataset, {}, 'Parc national de la Salonga');

var modisNDVI_kahuzi_biega = ee.ImageCollection('MODIS/006/MOD13Q1')
              .select('NDVI')
              .map(
                      function(img) {
                        var rescaled_NDVI = img.select('NDVI')
                                                .multiply(0.0001)
                                                .rename('NDVI_rescaled');
                        return img.addBands(rescaled_NDVI);
                   
  }
);
                    
var modisNDVI_2000_kahuzi_biega = modisNDVI_kahuzi_biega.filter(ee.Filter.date('2000-01-01', '2000-12-31'));
var modisNDVI_2000_clip_kahuzi_biega = modisNDVI_2000_kahuzi_biega.mean().clip(kahuzi_biega);
var mean_dict_2000_kahuzi_biega = modisNDVI_2000_clip_kahuzi_biega.reduceRegion({
  reducer: ee.Reducer.mean(),
  geometry: kahuzi_biega.geometry(),
  scale: 500,
});

var modisNDVI_2001_kahuzi_biega = modisNDVI_kahuzi_biega.filter(ee.Filter.date('2001-01-01', '2001-12-31'));
var modisNDVI_2001_clip_kahuzi_biega = modisNDVI_2001_kahuzi_biega.mean().clip(kahuzi_biega);
var mean_dict_2001_kahuzi_biega = modisNDVI_2001_clip_kahuzi_biega.reduceRegion({
  reducer: ee.Reducer.mean(),
  geometry: kahuzi_biega.geometry(),
  scale: 500,
});

var dictionary_kahuzi_biega = ee.Dictionary({
  2000: mean_dict_2000_kahuzi_biega.get('NDVI_rescaled'),
  2001: mean_dict_2001_kahuzi_biega.get('NDVI_rescaled')
});
print('Parc national de la Kahuzi Biega', dictionary_kahuzi_biega);

// LOOP TEST

var modisNDVI = ee.ImageCollection('MODIS/006/MOD13Q1')
              .select('NDVI')
              .map(
                      function(img) {
                        var rescaled_NDVI = img.select('NDVI')
                                                .multiply(0.0001)
                                                .rename('NDVI_rescaled');
                        return img.addBands(rescaled_NDVI);
                   
  }
);
                    
var modisNDVI_year = modisNDVI.filter(ee.Filter.calendarRange(2000, 2020, 'year'));

// settings for the years to filter on
var interval = 1;
var increment = 'year';
var start = '2000-01-01';
// make a list of start years
var startDate = ee.Date(start);
var secondDate = startDate.advance(interval, increment).millis();
var increase = secondDate.subtract(startDate.millis());
var list = ee.List.sequence(startDate.millis(), ee.Date('2020-06-09').millis(), increase);
print(list);

// SOURCE: https://gis.stackexchange.com/questions/321885/creating-loop-in-google-earth-engine

// make a composite (mean image) of the images of March and clip to the geometry
var composites = ee.ImageCollection.fromImages(list.map(function(startYear){
  var filtCol = modisNDVI_year.filterDate(ee.Date(startYear), ee.Date(startYear).advance(interval, increment));
  var meanImage = filtCol.mean().clip(salonga).divide(10000);
  // add the mean to every image
  var meanVal = meanImage.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: salonga,
    scale: 500
  });
  return ee.Image(meanImage.setMulti(meanVal)).set('system:time_start', ee.Date(startYear).millis());
}));

print('composites', composites);

var newList = composites.aggregate_array('NDVI');
print(newList);

var year_list = ['2000', '2001', '2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'];
print(year_list);

var out_dict = ee.Dictionary.fromLists(year_list, newList);
print(out_dict);

