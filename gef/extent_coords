/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #09d604 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[28.99076612304687, 4.665777753782091],
          [28.99076612304687, 3.6631958359615107],
          [30.03446729492187, 3.6631958359615107],
          [30.03446729492187, 4.665777753782091]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var countries = ee.FeatureCollection('USDOS/LSIB_SIMPLE/2017');
var drcongo = countries.filter(ee.Filter.eq('country_co', 'CG'));
var styleParams = {
  fillColor: 'b5ffb4',
  color: '868686',
  width: 2.5,
  opacity: 0.6,
};
Map.addLayer(drcongo, styleParams, 'DRC');
Map.setCenter(29.51399, 4.165103, 9);

var modisNDVI = ee.ImageCollection('MODIS/006/MOD13Q1')
              .select('NDVI')
              .map(
                      function(img) {
                        var rescaled_NDVI = img.select('NDVI')
                                                .multiply(0.0001)
                                                .rename('NDVI_rescaled');
                        return img.addBands(rescaled_NDVI);
                   
  }
);
                    
var modisNDVI_year = modisNDVI.filter(ee.Filter.calendarRange(2000, 2020, 'year'));

var interval = 1;
var increment = 'year';
var start = '2000-01-01';
var startDate = ee.Date(start);
var secondDate = startDate.advance(interval, increment).millis();
var increase = secondDate.subtract(startDate.millis());
var list = ee.List.sequence(startDate.millis(), ee.Date('2020-06-09').millis(), increase);

var year_list = ['2000', '2001', '2002', '2003', '2004', '2005', '2006', '2007', '2008',
                '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017',
                '2018', '2019', '2020'];
                
var geoBoundaries_ADM1 = ee.FeatureCollection('users/lkmills/geoBoundaries_DRC_ADM1');

// Parc National de la Garamba >> WDPA
var garamba = ee.FeatureCollection('WCMC/WDPA/current/polygons')
.filter(ee.Filter.and(
    ee.Filter.bounds(drcongo.geometry()),
    ee.Filter.eq('ORIG_NAME', 'Parc national de la Garamba')
  ));
Map.addLayer(garamba, {}, 'Garamba');
  
var composites_garamba = ee.ImageCollection.fromImages(list.map(function(startYear){
  var filtCol = modisNDVI_year.filterDate(ee.Date(startYear), ee.Date(startYear).advance(interval, increment));
  var meanImage = filtCol.mean().clip(garamba).divide(10000);
  var meanVal = meanImage.reduceRegion({
    reducer: ee.Reducer.mean(),
    geometry: garamba,
    scale: 500
  });
  return ee.Image(meanImage.setMulti(meanVal)).set('system:time_start', ee.Date(startYear).millis());
}));

var out_dict_garamba = ee.Dictionary.fromLists(year_list, composites_garamba.aggregate_array('NDVI'));
print('Parc national de la Garamba', out_dict_garamba);

var middle = ee.Geometry.Point([29.51399, 4.165103]);
Map.addLayer(middle, {color: 'pink'}, 'middle');

var bottom_left2 = ee.Geometry.Point([29.49601, 4.147917]);
Map.addLayer(bottom_left2, {color: 'pink'}, 'bottom_left2');

var bottom_right2 = ee.Geometry.Point([29.53285, 4.147917]);
Map.addLayer(bottom_right2, {color: 'pink'}, 'bottom_right2');

var top_left2 = ee.Geometry.Point([29.49601, 4.183334]);
Map.addLayer(top_left2, {color: 'pink'}, 'top_left2');

var top_right2 = ee.Geometry.Point([29.53285, 4.183334]);
Map.addLayer(top_right2, {color: 'pink'}, 'top_right2');

//

var bottom_left60 = ee.Geometry.Point([28.9947, 3.664583]);
Map.addLayer(bottom_left60, {color: 'green'}, 'bottom_left2');

var bottom_right60 = ee.Geometry.Point([30.03708, 3.664583]);
Map.addLayer(bottom_right60, {color: 'green'}, 'bottom_right2');

var top_left60 = ee.Geometry.Point([28.9947, 4.666666]);
Map.addLayer(top_left60, {color: 'green'}, 'top_left2');

var top_right60 = ee.Geometry.Point([30.03708, 4.666666]);
Map.addLayer(top_right60, {color: 'green'}, 'top_right2');

//

var bottom_leftf = ee.Geometry.Point([29.45269, 4.10625]);
Map.addLayer(bottom_leftf, {color: 'blue'}, 'bottom_leftf');

var bottom_rightf = ee.Geometry.Point([29.57621, 4.10625]);
Map.addLayer(bottom_rightf, {color: 'blue'}, 'bottom_rightf');

var top_leftf = ee.Geometry.Point([29.45269, 4.225]);
Map.addLayer(top_left60, {color: 'blue'}, 'top_leftf');

var top_rightf = ee.Geometry.Point([29.57621, 4.225]);
Map.addLayer(top_rightf, {color: 'blue'}, 'top_rightf');